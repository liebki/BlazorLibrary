@inject SQLiteManager _db
@inject NavigationManager navMan
@inject IJSRuntime js

@page "/spieldrucken"

<LoginCheck />

<div id="spieldruck">

    <h1>Print your game</h1>

    <div class="form-floating mb-3">
        <label for="spielname">Name of the game</label>
        <p id="spielname">@spiel.Name</p>
    </div>

    <div class="form-floating">
        <label for="spielbeschreibung">Description of the game</label>
        @if (!string.IsNullOrWhiteSpace(spiel.Beschreibung))
        {
            <p id="spielname">@spiel.Beschreibung</p>
        }
        else
        {
            <p id="spielname" class="errorTextEl">There is no description.</p>
        }
    </div>

    <div class="form-floating">
        <label for="spielbild">Picture of the game</label>

        @if (spiel.Bildlink.StartsWith("http"))
        {
            <img id="spielbild" src="@spiel.Bildlink" class="img-rounded druckBildGroesse">
        }
        else
        {
            <p id="spielname" class="errorTextEl">There is no image.</p>
        }
    </div>

    <div class="form-floating">
        <label for="spielsterne">Own rating (stars)</label>
        @if (spiel.Sterne > 0)
        {
            <h6 id="spielsterne"><SterneDarstellung Sterne="@spiel.Sterne" /></h6>
            <label for="spielbewertung">Own rating (Comment)</label>
            <h6 id="spielbewertung">@spiel.SterneTooltip</h6>
        }
        else
        {
            <p id="spielname" class="errorTextEl">There is no rating.</p>
        }
    </div>

    @if (MauiProgram.Einstellungen.Usepricescraper)
    {
        <div class="form-floating">
            <label for="spielpreis">Estimated price of the game (or addons)</label>
            @if (!string.IsNullOrWhiteSpace(spiel.Estimatedprice) && !spiel.Estimatedprice.Equals("!"))
            {
                <h6 id="spielpreis">@spiel.Estimatedprice</h6>
            }
            else
            {
                <p id="spielname" class="errorTextEl">There is no price.</p>
            }
        </div>
    }

    @if (MauiProgram.Einstellungen.Userawg)
    {
        <div class="form-floating">
            <label for="spielmetacritics">Last metacritics value</label>
            @if (!string.IsNullOrWhiteSpace(spiel.Metacritics) && !spiel.Metacritics.Equals("!"))
            {
                <h6 id="spielmetacritics">@spiel.Metacritics</h6>
            }
            else
            {
                <p id="spielname" class="errorTextEl">There is no metacritic value.</p>
            }
        </div>
    }

    <div class="form-floating">
        <label for="spielgenre">Genre of the game</label>
        @if (spiel.Genrelist.Length > 0)
        {
            <h6 id="spielgenre">@string.Join(',', Manager.GenreArrayToStringArray(spiel.Genrelist))</h6>
        }
        else
        {
            <p id="spielname" class="errorTextEl">There are no genre.</p>
        }
    </div>

</div>

<button type="button" class="btn btn-success" @onclick="DownloadScreenShot">Speichere Bild</button>
<button type="button" class="btn btn-success" @onclick="BildDirektDruck">Direktdruck</button>
<button @onclick="AbbrechenAction" class="btn btn-primary">Quit</button>

@code {

    private async Task DownloadScreenShot()
    {
        string RandomImageName = Guid.NewGuid().ToString().Substring(0,6);
        await js.InvokeVoidAsync("downloadScreenShot", $"image-{RandomImageName}");
        await Manager.MauiDialog("Bild wird gespeichert", $"Das Bild wird gespeichert, schau im Download-Ordner nach image-{RandomImageName}.png", "Alles klar");
    }

    private async Task BildDirektDruck()
    {
        ImageBase64Data = await js.InvokeAsync<string>("getData");
        await DruckeSpiel();
        await Manager.MauiDialog("Bild wird gedruckt", "Das Bild wird gedruckt, sei sicher dass der Drucker an ist!", "Alles klar");
    }
}